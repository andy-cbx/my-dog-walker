import React, {	createContext,	PropsWithChildren,	useContext,	useState,} from 'react';type TransitionContextProps = {	toggleCompleted: (value: boolean) => void;	completed: boolean;};const TransitionContext = createContext<TransitionContextProps | null>(null);export const useTransitionContext = () => {	const context = useContext(TransitionContext);	if (!context) {		throw new Error(			'context has to be used within <TransitionContext.Provider>',		);	}	return context;};export const TransitionProvider: React.FC<PropsWithChildren> = ({	children,}) => {	const [completed, setCompleted] = useState(false);	const toggleCompleted = (value: boolean) => {		setCompleted(value);	};	return (		<TransitionContext.Provider			value={{				toggleCompleted,				completed,			}}		>			{children}		</TransitionContext.Provider>	);};