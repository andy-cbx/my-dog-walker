import { QueryClient, QueryClientProvider } from '@tanstack/react-query';import * as React from 'react';import { ErrorBoundary } from 'react-error-boundary';import { HelmetProvider } from 'react-helmet-async';import { MainErrorFallback } from '@/components/errors/main';import { Spinner } from '@/components/ui/spinner';import { TransitionProvider } from '@/context/transition-context';import { queryConfig } from '@/lib/react-query';import ScrollToTop from '@/utils/scroll-to-top';type AppProviderProps = {	children: React.ReactNode;};export const AppProvider = ({ children }: AppProviderProps) => {	const [queryClient] = React.useState(		() =>			new QueryClient({				defaultOptions: queryConfig,			}),	);	return (		<React.Suspense			fallback={				<div className="flex h-screen w-screen items-center justify-center">					<Spinner size="xl" />				</div>			}		>			<ErrorBoundary FallbackComponent={MainErrorFallback}>				<HelmetProvider>					<TransitionProvider>						<QueryClientProvider client={queryClient}>							{children}						</QueryClientProvider>					</TransitionProvider>				</HelmetProvider>			</ErrorBoundary>		</React.Suspense>	);};